pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/pv-commits/my-app.git'
            }
        }
    
        // Add the command to prune the remote before fetching
        stage('Prune Remote') {
            steps {
                sh 'git remote prune origin'
            }
        }

        stage('Compile-Package') {
            steps {
                script {
                    def mvnHome = tool name: 'maven-3', type: 'maven'
                    sh "${mvnHome}/bin/mvn package"
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def mvnHome = tool name: 'maven-3', type: 'maven'
                    withSonarQubeEnv('sonar9') {
                        sh "${mvnHome}/bin/mvn sonar:sonar"
                    }
                }
            }
        }

        stage('Email Notification') {
            steps {
                mail bcc: '', body: '''Hi Welcome to jenkins email alerts
                Thanks
                Hari''', cc: '', from: '', replyTo: '', subject: 'Jenkins Job', to: 'pbaghe03@gmail.com'
            }
        }

        stage('Slack Notification') {
            steps {
                slackSend baseurl: 'https://hooks.slack.com/services/',
                          channel: '#jenkins-pipeline-demo',
                          color: 'good',
                          message: 'Welcome to Jenkins, Slack!',
                          teamDomain: 'javahomecloud',
                          tokenCredentialId: 'slack-demo'
            }
        }
    }
}
